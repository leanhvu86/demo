import { NgZone, OnDestroy } from '@angular/core';
import { ReplaySubject } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
export declare abstract class NgMapApiLoader implements OnDestroy {
    protected config: any;
    api$: ReplaySubject<any>;
    abstract load(): any;
    constructor(config: any);
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<NgMapApiLoader, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDeclaration<NgMapApiLoader, never, never, {}, {}, never, never, false>;
}
export declare class NgMapAsyncCallbackApiLoader extends NgMapApiLoader {
    protected zone: NgZone;
    constructor(zone: NgZone, config: any);
    load(): void;
    private addGoogleMapsApi();
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<NgMapAsyncCallbackApiLoader, [null, { optional: true; }]>;
    static ɵprov: ɵngcc0.ɵɵInjectableDeclaration<NgMapAsyncCallbackApiLoader>;
}
export declare class NgMapAsyncApiLoader extends NgMapApiLoader {
    constructor(config: any);
    load(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<NgMapAsyncApiLoader, [{ optional: true; }]>;
    static ɵprov: ɵngcc0.ɵɵInjectableDeclaration<NgMapAsyncApiLoader>;
}

//# sourceMappingURL=api-loader.d.ts.map