{"version":3,"file":"ngui-map.js","sources":["@ngui/map/out/services/util.ts","@ngui/map/out/directives/base-map-directive.ts","@ngui/map/out/services/option-builder.ts","@ngui/map/out/services/navigator-geolocation.ts","@ngui/map/out/services/config.ts","@ngui/map/out/services/api-loader.ts","@ngui/map/out/services/geo-coder.ts","@ngui/map/out/services/ngui-map.ts","@ngui/map/out/components/ngui-map.component.ts","@ngui/map/out/directives/bicycling-layer.ts","@ngui/map/out/components/info-window.ts","@ngui/map/out/components/custom-marker.ts","@ngui/map/out/directives/circle.ts","@ngui/map/out/directives/data-layer.ts","@ngui/map/out/directives/directions-renderer.ts","@ngui/map/out/directives/drawing-manager.ts","@ngui/map/out/directives/ground-overlay.ts","@ngui/map/out/directives/heatmap-layer.ts","@ngui/map/out/directives/kml-layer.ts","@ngui/map/out/directives/marker.ts","@ngui/map/out/directives/places-auto-complete.ts","@ngui/map/out/directives/polygon.ts","@ngui/map/out/directives/polyline.ts","@ngui/map/out/directives/street-view-panorama.ts","@ngui/map/out/directives/traffic-layer.ts","@ngui/map/out/directives/transit-layer.ts","@ngui/map/out/ngui-map.module.ts"],"names":["INPUTS","OUTPUTS"],"mappings":"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","sourcesContent":["/**\n * return json string from json-like string\n */\nexport function jsonize(str: string): string {\n  try {       // if parsable already, return as it is\n    JSON.parse(str);\n    return str;\n  } catch (e) { // if not parsable, change little\n    return str\n      .replace(/([\\$\\w]+)\\s*:/g, // wrap keys without double quote\n        function(_: any, $1: any) {\n          return '\"' + $1 + '\":';\n        }\n      )\n      .replace(/'([^']+)'/g,   // replacing single quote to double quote\n        function(_: any, $1: any) {\n          return '\"' + $1 + '\"';\n        }\n      );\n  }\n}\n\n/**\n * Returns string to an object by using JSON.parse()\n */\nexport function getJSON(input: any): any {\n  if (typeof input === 'string') {\n    const re = /^[\\+\\-]?[0-9\\.]+,[ ]*\\ ?[\\+\\-]?[0-9\\.]+$/; // lat,lng\n    if (input.match(re)) {\n      input = '[' + input + ']';\n    }\n    return JSON.parse(jsonize(input));\n  } else {\n    return input;\n  }\n}\n\n/**\n * json type definition\n */\n/* tslint:disable */\n//interface IJsonArray extends Array<string|number|boolean|Date|IJson|IJsonArray> { }\nexport interface IJson {\n  //[x: string]: string|number|boolean|Date|IJson|IJsonArray;\n  [x: string]: string|number|boolean|Date|IJson|Array<string|number|boolean|Date|IJson>;\n}\n/* tslint:enable */\n\n\n/**\n * Returns camel-cased from string 'Foo Bar' to 'fooBar'\n */\nexport function toCamelCase(str: string): string {\n  return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function(letter, index) {\n    return index === 0 ? letter.toLowerCase() : letter.toUpperCase();\n  }).replace(/\\s+/g, '');\n}\n\nexport function isMapsApiLoaded() {\n  return typeof google === 'object' && typeof google.maps === 'object';\n}\n\nexport function missingLibraryError(component, libName) {\n  return Error(`${component}: library '${libName}' is missing, please ensure to include it in a 'libraries' parameter.\n    Example:\n      NguiMapModule.forRoot({\n        apiUrl: 'https://maps.googleapis.com/maps/api/js?libraries=${libName}'\n      })\n  `);\n}","import {EventEmitter, SimpleChanges, Output, OnInit, OnChanges, OnDestroy} from '@angular/core';\n\nimport { OptionBuilder } from '../services/option-builder';\nimport { NguiMap } from '../services/ngui-map';\nimport { NguiMapComponent } from '../components/ngui-map.component';\nimport { missingLibraryError } from '../services/util';\nexport abstract class BaseMapDirective implements OnInit, OnChanges, OnDestroy {\n  // this should be redefined on each childr directive\n  @Output() initialized$: EventEmitter<any> = new EventEmitter();\n\n  public mapObject: any; // e.g. google.maps.Marker\n  public objectOptions: any; // e.g. google.maps.MarkerOptions\n\n  public nguiMap: NguiMap;\n  public optionBuilder: OptionBuilder;\n  public libraryName: string;\n  protected _subscriptions = [];\n\n  constructor(\n    protected nguiMapComponent: NguiMapComponent,\n    public    mapObjectName: string,\n    protected inputs: string[],\n    protected outputs: string[]\n  ) {\n    this.nguiMap = this.nguiMapComponent['nguiMap'];\n    this.optionBuilder = this.nguiMapComponent['optionBuilder'];\n    // all outputs must be initialized\n    this.outputs.forEach(output => this[output] = new EventEmitter());\n    this.mapObjectName = mapObjectName;\n  }\n\n  // Initialize this map object when map is ready\n  ngOnInit() {\n    if (this.nguiMapComponent.mapIdledOnce) { // map is ready already\n      this.initialize();\n    } else {\n      this.nguiMapComponent.mapReady$.subscribe(map => this.initialize());\n    }\n  }\n\n  // only called when map is ready\n  initialize(): void {\n    this.objectOptions = this.optionBuilder.googlizeAllInputs(this.inputs, this);\n\n\n    // will be set after geocoded\n    typeof this.objectOptions.position === 'string' && (delete this.objectOptions.position);\n    typeof this.objectOptions.center === 'string' && (delete this.objectOptions.center);\n\n    // noinspection TypeScriptUnresolvedFunction\n    if (this.libraryName) {\n      if (!google.maps[this.libraryName]) {\n        throw missingLibraryError(this.mapObjectName, this.libraryName);\n      }\n      this.mapObject = new google.maps[this.libraryName][this.mapObjectName](this.objectOptions);\n    } else {\n      this.mapObject = new google.maps[this.mapObjectName](this.objectOptions);\n    }\n    this.mapObject.setMap(this.nguiMapComponent.map);\n    this.mapObject['mapObjectName'] = this.mapObjectName;\n    this.mapObject['nguiMapComponent'] = this.nguiMapComponent;\n\n    // set google events listeners and emits to this outputs listeners\n    this.nguiMap.setObjectEvents(this.outputs, this, 'mapObject');\n\n    this.nguiMapComponent.addToMapObjectGroup(this.mapObjectName, this.mapObject);\n    this.initialized$.emit(this.mapObject);\n  }\n\n  // When input is changed, update object too.\n  // e.g., when map center is changed by user, update center on the map\n  ngOnChanges(changes: SimpleChanges) {\n\n    this.nguiMap.updateGoogleObject(this.mapObject, changes);\n  }\n\n  // When destroyed, remove event listener, and delete this object to prevent memory leak\n  ngOnDestroy() {\n    this._subscriptions.map(subscription => subscription.unsubscribe());\n    this.nguiMapComponent.removeFromMapObjectGroup(this.mapObjectName, this.mapObject);\n\n    if (this.mapObject) {\n      this.nguiMap.clearObjectEvents(this.outputs, this, 'mapObject');\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { getJSON, IJson } from './util';\n\n/**\n * change any object to google object options\n * e.g. [1,2] -> new google.maps.LatLng(1,2);\n */\n@Injectable()\nexport class OptionBuilder {\n\n  googlizeAllInputs(definedInputs: string[], userInputs: any) {\n    let options: any = {};\n\n    // if options given from user, only take options and ignore other inputs\n    if (userInputs.options) {\n\n      options = userInputs.options;\n      if (!this.onlyOptionsGiven(definedInputs, userInputs)) {\n        console.error('when \"options\" are used, other options are ignored');\n      }\n    } else { // if options not given, process all user inputs\n      definedInputs.forEach(input => {\n        if (userInputs[input] !== undefined)  {\n          options[input] = this.googlize(userInputs[input], {key: input});\n        }\n      });\n    }\n    return options;\n  }\n\n  googlizeMultiple(inputs: any[], options?: IJson): any {\n    options =  options || {};\n    for (let key in inputs) {\n      let val = inputs[key];\n      // (non-strings are fully converted)\n      if (typeof val !== 'string') {\n        options[key] = val;\n      } // sometimes '0' needed to stay as it is\n      else if (!(options['doNotConverStringToNumber'] && val.match(/^[0-9]+$/))) {\n        options[key] = this.googlize(val, {key: key});\n      }\n    } // for(var key in attrs)\n    return options;\n  }\n\n  googlize(input: any, options?: IJson): any {\n    options = options || {};\n    let output: any = input;\n    if (typeof input === 'string') { // convert string to a google object\n      if (input === 'false') {\n        output = false;\n      } else if (input === '0') {\n        output = 0;\n      } else {\n        output =\n          // -> googlize -> getJsonParsed -> googlizeMultiple -> googlize until all elements are parsed\n          this.getJSONParsed(input, options)\n\n          /* Foo.Bar(...) -> new google.maps.Foo.Bar(...) */\n          || this.getAnyMapObject(input)\n\n          /*  MapTypeID.HYBRID -> new google.maps.MapTypeID.HYBRID */\n          || this.getAnyMapConstant(input, options)\n\n          /*  2016-06-20 -> new Date('2016-06-20') */\n          || this.getDateObject(input)\n\n          || input;\n      }\n    }\n\n    if (options['key']) {\n      let key: string = <string>options['key'];\n      if (output instanceof Array) { // e.g., [1, 2]\n        if (key === 'bounds') {\n          output = new google.maps.LatLngBounds(output[0], output[1]);\n        } else if (key === 'icons') {\n          output = this.getMapIcons(output);\n        } else if (key === 'position' || key.match(/^geoFallback/) ) {\n          output = this.getLatLng(output);\n        }\n      } else if (output instanceof Object) {\n        if (key === 'icon') {\n          output = this.getMarkerIcon(output);\n        }\n        else if (key.match(/ControlOptions$/)) {\n          output = this.getMapControlOption(output);\n        }\n      }\n    }\n\n    // delete keys only for processing, not used by google\n    delete output['doNotConverStringToNumber'];\n    delete output['key'];\n\n    return output;\n  }\n\n  private getLatLng(input: any): google.maps.LatLng | Array<google.maps.LatLng> {\n    let output: google.maps.LatLng | Array<google.maps.LatLng>;\n    if (input[0].constructor === Array) { // [[1,2],[3,4]]\n      output = (<any[]>input).map((el: number[]) => new google.maps.LatLng(el[0], el[1]));\n    } else if (!isNaN(parseFloat(input[0])) && isFinite(input[0])) {\n      output = new google.maps.LatLng(input[0], input[1]);\n    }\n    return output;\n  }\n\n  private getJSONParsed(input: any, options: IJson): IJson {\n    let output: any;\n    try {\n      output = getJSON(input);\n      if (output instanceof Array) {\n        // [{a:1}] : not lat/lng ones\n\n        if (output[0].constructor !== Object) { // [[1,2],[3,4]] or [1,2]\n          output = this.getLatLng(output);\n        }\n      }\n      // JSON is an object (not array or null)\n      else if (output === Object(output)) {\n        // check for nested hashes and convert to Google API options\n        let newOptions = options;\n        newOptions['doNotConverStringToNumber'] = true;\n        output = this.googlizeMultiple(output, newOptions);\n      }\n    } catch (e) {\n    }\n    return output;\n  }\n\n  private getAnyMapObject(input: string): any {\n    let output: any;\n    if (input.match(/^[A-Z][a-zA-Z0-9]+\\(.*\\)$/)) {\n      try {\n        output = Function(`return new google.maps.${input};`)();\n      } catch (e) {}\n    }\n    return output;\n  }\n\n  private getAnyMapConstant(input: string, options: IJson): any {\n    let output: any;\n\n    if (input.match(/^([A-Z][a-zA-Z0-9]+)\\.([A-Z]+)$/)) { // e.g. MapTypeID.HYBRID\n      try {\n        let matches = input.match(/^([A-Z][a-zA-Z0-9]+)\\.([A-Z]+)$/);\n        output = google.maps[matches[1]][matches[2]];\n      } catch (e) {}\n    } else if (input.match(/^[A-Z]+$/)) { // e.g. HYBRID\n      try {\n        let capitalizedKey = (<string>options['key']).charAt(0).toUpperCase() +\n          (<string>options['key']).slice(1);\n        output = google.maps[capitalizedKey][input];\n      } catch (e) {}\n    }\n    return output;\n  }\n\n  /**\n   * streetviewControl, panControl, etc, not a general control\n   */\n  private getMapControlOption(controlOptions: IJson): IJson {\n    let newControlOptions: IJson = controlOptions;\n\n    for (let key in newControlOptions) { // assign the right values\n      if (newControlOptions[key]) {\n        let value = newControlOptions[key];\n\n        if (typeof value === 'string') {\n          value = (<string>value).toUpperCase();\n        }\n        else if (key === 'mapTypeIds') {\n          value = (<any[]>value).map(function (str) {\n            if (str.match(/^[A-Z]+$/)) { // if constant\n              return google.maps.MapTypeId[str.toUpperCase()];\n            } else { // else, custom map-type\n              return str;\n            }\n          });\n        }\n\n        if (key === 'style') {\n          let objName = key.replace(/Options$/, '') + 'Style';\n          newControlOptions[key] = google.maps[objName][<any>value];\n        }\n        else if (key === 'position') {\n          newControlOptions[key] = google.maps.ControlPosition[<any>value];\n        }\n        else {\n          newControlOptions[key] = value;\n        }\n      }\n    }\n\n    return newControlOptions;\n  }\n\n  private getDateObject(input: string): Date {\n    let output: Date;\n\n    if (input.match(/^(\\d{4}\\-\\d\\d\\-\\d\\d([tT][\\d:\\.]*)?)([zZ]|([+\\-])(\\d\\d):?(\\d\\d))?$/)) {\n      try {\n        output = new Date(input);\n      } catch (e) {}\n    }\n    return output;\n  }\n\n  private getMapIcons(input: any[]): any[] {\n    return input.map(el => {\n      if (el.icon.path.match(/^[A-Z_]+$/)) {\n        el.icon.path = google.maps.SymbolPath[el.icon.path];\n      }\n      return el;\n    });\n  }\n\n  private getMarkerIcon(input: any): any {\n    let output = input;\n\n    if (('' + output.path).match(/^[A-Z_]+$/)) {\n      output.path = google.maps.SymbolPath[output.path];\n    }\n\n    for (let key in output) {\n      let arr = output[key];\n      if (key === 'anchor' || key === 'origin' || key === 'labelOrigin') {\n        output[key] = new google.maps.Point(arr[0], arr[1]);\n    } else if (key === 'size' || key === 'scaledSize') {\n        output[key] = new google.maps.Size(arr[0], arr[1]);\n      }\n    }\n\n    return output;\n  }\n\n  private onlyOptionsGiven(definedInputs: string[], userInputs: any): boolean {\n    for (let i = 0; i < definedInputs.length; i++) {\n      let input = definedInputs[i];\n      if (input !== 'options' && typeof userInputs[input] !== 'undefined') {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\nimport { IJson } from './util';\n\n/**\n *  service for navigator.geolocation methods\n */\n@Injectable()\nexport class NavigatorGeolocation {\n\n  getCurrentPosition(geoLocationOptions?: IJson): Observable<any> {\n    geoLocationOptions = geoLocationOptions || { timeout: 5000 };\n\n    return new Observable<any>((responseObserver: Observer<any>) => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(\n          (position) => {\n            responseObserver.next(position);\n            responseObserver.complete();\n          },\n          (evt) => responseObserver.error(evt),\n          geoLocationOptions\n        );\n      } else {\n        responseObserver.error('Browser Geolocation service failed.');\n      }\n    });\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const NG_MAP_CONFIG_TOKEN = new InjectionToken<ConfigOption>('NG_MAP_CONFIG_TOKEN');\nexport interface ConfigOption {\n  apiUrl?: string;\n}\n","import { Injectable, Inject, Optional, NgZone, OnDestroy } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\nimport { NG_MAP_CONFIG_TOKEN } from './config';\nimport { isMapsApiLoaded } from './util';\n\nexport abstract class NgMapApiLoader implements OnDestroy {\n  api$: ReplaySubject<any> = new ReplaySubject(1);\n\n  abstract load();\n\n  constructor(protected config) {\n    this.config = this.config || {apiUrl: 'https://maps.google.com/maps/api/js'};\n  }\n\n  ngOnDestroy() {\n    this.api$.complete();\n  }\n}\n\n@Injectable()\nexport class NgMapAsyncCallbackApiLoader extends NgMapApiLoader {\n  constructor(protected zone: NgZone, @Optional() @Inject(NG_MAP_CONFIG_TOKEN) config) {\n    super(config);\n  }\n\n  load() {\n    if (typeof window === 'undefined') {\n      return;\n    }\n\n    if (isMapsApiLoaded()) {\n      this.api$.next(google.maps);\n    } else if (!document.querySelector('#ngui-map-api')) {\n      (<any>window)['nguiMapRef'] = (<any>window)['nguiMapRef'] || [];\n      (<any>window)['nguiMapRef'].push({ zone: this.zone, componentFn: () => this.api$.next(google.maps)});\n      this.addGoogleMapsApi();\n    }\n  }\n\n  private addGoogleMapsApi() {\n    (<any>window)['initNguiMap'] = (<any>window)['initNguiMap'] || function() {\n      (<any>window)['nguiMapRef'].forEach(nguiMapRef => {\n        nguiMapRef.zone.run(function() { nguiMapRef.componentFn(); });\n      });\n      (<any>window)['nguiMapRef'].splice(0, (<any>window)['nguiMapRef'].length);\n    };\n\n    let script = document.createElement( 'script' );\n    script.id = 'ngui-map-api';\n\n    // script.src = \"https://maps.google.com/maps/api/js?callback=initNguiMap\";\n    let apiUrl = this.config.apiUrl ;\n    apiUrl += apiUrl.indexOf('?') !== -1 ? '&' : '?';\n    script.src = apiUrl + 'callback=initNguiMap';\n    document.querySelector('body').appendChild(script);\n  }\n}\n\n@Injectable()\nexport class NgMapAsyncApiLoader extends NgMapApiLoader {\n  constructor(@Optional() @Inject(NG_MAP_CONFIG_TOKEN) config) {\n    super(config);\n  }\n\n  load() {\n    if (typeof window === 'undefined') {\n      return;\n    }\n\n    if (isMapsApiLoaded()) {\n      this.api$.next(google.maps);\n    } else if (!document.querySelector('#ngui-map-api')) {\n      let script = document.createElement('script');\n      script.id = 'ngui-map-api';\n\n      script.async = true;\n      script.onload = () => this.api$.next(google.maps);\n      script.src = this.config.apiUrl;\n      document.querySelector('body').appendChild(script);\n    }\n  }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\nimport { NgMapApiLoader } from './api-loader';\n\n/**\n *   Provides [defered/promise API](https://docs.angularjs.org/api/ng/service/$q)\n *   service for Google Geocoder service\n */\n\n@Injectable()\nexport class GeoCoder implements OnDestroy {\n  private apiLoaderSubs = [];\n  constructor(private apiLoader: NgMapApiLoader) {}\n\n  geocode(options: google.maps.GeocoderRequest) {\n    return new Observable((responseObserver: Observer<any>) => {\n        this.apiLoaderSubs.push(this.apiLoader.api$\n          .subscribe(() => this.requestGeocode(options, responseObserver)));\n    });\n  }\n\n  ngOnDestroy() {\n    this.apiLoaderSubs.map(sub => sub.unsubscribe());\n  }\n\n  private requestGeocode(options, observer) {\n    const geocoder = new google.maps.Geocoder();\n    geocoder.geocode(options, function (results, status) {\n      if (status === google.maps.GeocoderStatus.OK) {\n        observer.next(results);\n        observer.complete();\n      } else {\n        observer.error(results);\n      }\n    });\n  }\n}\n","import { Injectable, SimpleChanges, NgZone } from '@angular/core';\nimport { OptionBuilder } from './option-builder';\nimport { GeoCoder } from './geo-coder';\n\n/**\n * collection of map instance-related properties and methods\n */\n@Injectable()\nexport class NguiMap {\n\n  constructor(\n    private geoCoder: GeoCoder,\n    private optionBuilder: OptionBuilder,\n    private zone: NgZone,\n  ) {}\n\n  setObjectEvents(definedEvents: string[], thisObj: any, prefix: string) {\n    definedEvents.forEach(definedEvent => {\n      const eventName = this.getEventName(definedEvent),\n        zone = this.zone;\n      zone.runOutsideAngular(() => {\n        thisObj[prefix].addListener(eventName, function(event: google.maps.event) {\n          let param: any = event ? event : {};\n          param.target = this;\n          zone.run(() => thisObj[definedEvent].emit(param));\n        });\n      });\n    });\n  }\n\n  clearObjectEvents(definedEvents: string[], thisObj: any, prefix: string) {\n    definedEvents.forEach(definedEvent => {\n      const eventName = this.getEventName(definedEvent);\n      this.zone.runOutsideAngular(() => {\n        if (thisObj[prefix]) {\n          google.maps.event.clearListeners(thisObj[prefix], eventName);\n        }\n      });\n    });\n\n    if (thisObj[prefix]) {\n      if (thisObj[prefix].setMap) {\n        thisObj[prefix].setMap(null);\n      }\n\n      delete thisObj[prefix].nguiMapComponent;\n      delete thisObj[prefix];\n    }\n\n  }\n\n  updateGoogleObject = (object: any, changes: SimpleChanges)  => {\n    let val: any, currentValue: any, setMethodName: string;\n    if (object) {\n      for (let key in changes) {\n        setMethodName = `set${key.replace(/^[a-z]/, x => x.toUpperCase()) }`;\n        currentValue = changes[key].currentValue;\n        if (['position', 'center'].indexOf(key) !== -1 && typeof currentValue === 'string') {\n          // To preserve setMethod name in Observable callback, wrap it as a function, then execute\n          ((setMethodName) => {\n            this.geoCoder.geocode({address: currentValue}).subscribe(results => {\n              if (typeof object[setMethodName] === 'function') {\n                object[setMethodName](results[0].geometry.location);\n              } else {\n                console.error(\n                  'Not all options are dynamically updatable according to Googles Maps API V3 documentation.\\n' +\n                  'Please check Google Maps API documentation, and use \"setOptions\" instead.'\n                );\n              }\n            });\n          })(setMethodName);\n        } else {\n          val =  this.optionBuilder.googlize(currentValue);\n          if (typeof object[setMethodName] === 'function') {\n            object[setMethodName](val);\n          } else {\n            console.error(\n              'Not all options are dynamically updatable according to Googles Maps API V3 documentation.\\n' +\n              'Please check Google Maps API documentation, and use \"setOptions\" instead.'\n            );\n          }\n        }\n      }\n    }\n  }\n\n  private getEventName(definedEvent) {\n    return definedEvent\n      .replace(/([A-Z])/g, ($1) => `_${$1.toLowerCase()}`) // positionChanged -> position_changed\n      .replace(/^map_/, '');                               // map_click -> click  to avoid DOM conflicts\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  ViewEncapsulation,\n  EventEmitter,\n  SimpleChanges,\n  Output,\n  NgZone,\n  AfterViewInit, AfterViewChecked, OnChanges, OnDestroy\n} from '@angular/core';\n\nimport { OptionBuilder } from '../services/option-builder';\nimport { NavigatorGeolocation } from '../services/navigator-geolocation';\nimport { GeoCoder } from '../services/geo-coder';\nimport { NguiMap } from '../services/ngui-map';\nimport { NgMapApiLoader } from '../services/api-loader';\nimport { InfoWindow } from './info-window';\nimport { Subject } from 'rxjs';\nimport { debounceTime, tap, first } from 'rxjs/operators';\nimport { toCamelCase } from '../services/util';\n\nconst INPUTS = [\n  'backgroundColor', 'center', 'disableDefaultUI', 'disableDoubleClickZoom', 'draggable', 'draggableCursor',\n  'draggingCursor', 'heading', 'keyboardShortcuts', 'mapMaker', 'mapTypeControl', 'mapTypeId', 'maxZoom', 'minZoom',\n  'noClear', 'overviewMapControl', 'panControl', 'panControlOptions', 'rotateControl', 'scaleControl', 'scrollwheel',\n  'streetView', 'styles', 'tilt', 'zoom', 'streetViewControl', 'zoomControl', 'zoomControlOptions', 'mapTypeControlOptions',\n  'overviewMapControlOptions', 'rotateControlOptions', 'scaleControlOptions', 'streetViewControlOptions', 'fullscreenControl', 'fullscreenControlOptions',\n  'options',\n  // ngui-map-specific inputs\n  'geoFallbackCenter'\n];\n\nconst OUTPUTS = [\n  'bounds_changed', 'center_changed', 'click', 'dblclick', 'drag', 'dragend', 'dragstart', 'heading_changed', 'idle',\n  'maptypeid_changed', 'mousemove', 'mouseout', 'mouseover', 'projection_changed', 'resize', 'rightclick',\n  'tilesloaded', 'tile_changed', 'zoom_changed',\n  // to avoid DOM event conflicts\n  'mapClick', 'mapMouseover', 'mapMouseout', 'mapMousemove', 'mapDrag', 'mapDragend', 'mapDragstart'\n];\n\n@Component({\n  selector: 'ngui-map',\n  providers: [NguiMap, OptionBuilder, GeoCoder, NavigatorGeolocation],\n  styles: [`\n    ngui-map {display: block; height: 300px;}\n    .google-map {width: 100%; height: 100%}\n  `],\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <div class=\"google-map\"></div>\n    <ng-content></ng-content>\n  `,\n})\nexport class NguiMapComponent implements OnChanges, OnDestroy, AfterViewInit, AfterViewChecked {\n  // declare INPUTS for AOT compiler\n  public backgroundColor: any; // generated by ngc-pre-compiler.js\n  public center: any; // generated by ngc-pre-compiler.js\n  public disableDefaultUI: any; // generated by ngc-pre-compiler.js\n  public disableDoubleClickZoom: any; // generated by ngc-pre-compiler.js\n  public draggable: any; // generated by ngc-pre-compiler.js\n  public draggableCursor: any; // generated by ngc-pre-compiler.js\n  public draggingCursor: any; // generated by ngc-pre-compiler.js\n  public heading: any; // generated by ngc-pre-compiler.js\n  public keyboardShortcuts: any; // generated by ngc-pre-compiler.js\n  public mapMaker: any; // generated by ngc-pre-compiler.js\n  public mapTypeControl: any; // generated by ngc-pre-compiler.js\n  public mapTypeId: any; // generated by ngc-pre-compiler.js\n  public maxZoom: any; // generated by ngc-pre-compiler.js\n  public minZoom: any; // generated by ngc-pre-compiler.js\n  public noClear: any; // generated by ngc-pre-compiler.js\n  public overviewMapControl: any; // generated by ngc-pre-compiler.js\n  public panControl: any; // generated by ngc-pre-compiler.js\n  public panControlOptions: any; // generated by ngc-pre-compiler.js\n  public rotateControl: any; // generated by ngc-pre-compiler.js\n  public scaleControl: any; // generated by ngc-pre-compiler.js\n  public scrollwheel: any; // generated by ngc-pre-compiler.js\n  public streetView: any; // generated by ngc-pre-compiler.js\n  public styles: any; // generated by ngc-pre-compiler.js\n  public tilt: any; // generated by ngc-pre-compiler.js\n  public zoom: any; // generated by ngc-pre-compiler.js\n  public streetViewControl: any; // generated by ngc-pre-compiler.js\n  public zoomControl: any; // generated by ngc-pre-compiler.js\n  public zoomControlOptions: any; // generated by ngc-pre-compiler.js\n  public mapTypeControlOptions: any; // generated by ngc-pre-compiler.js\n  public overviewMapControlOptions: any; // generated by ngc-pre-compiler.js\n  public rotateControlOptions: any; // generated by ngc-pre-compiler.js\n  public scaleControlOptions: any; // generated by ngc-pre-compiler.js\n  public streetViewControlOptions: any; // generated by ngc-pre-compiler.js\n  public fullscreenControl: any; // generated by ngc-pre-compiler.js\n  public fullscreenControlOptions: any; // generated by ngc-pre-compiler.js\n  public options: any; // generated by ngc-pre-compiler.js\n  public geoFallbackCenter: any; // generated by ngc-pre-compiler.js\n\n  // declare OUTPUTS for AOT compiler\n  public bounds_changed: any; // generated by ngc-pre-compiler.js\n  public center_changed: any; // generated by ngc-pre-compiler.js\n  public click: any; // generated by ngc-pre-compiler.js\n  public dblclick: any; // generated by ngc-pre-compiler.js\n  public drag: any; // generated by ngc-pre-compiler.js\n  public dragend: any; // generated by ngc-pre-compiler.js\n  public dragstart: any; // generated by ngc-pre-compiler.js\n  public heading_changed: any; // generated by ngc-pre-compiler.js\n  public idle: any; // generated by ngc-pre-compiler.js\n  public maptypeid_changed: any; // generated by ngc-pre-compiler.js\n  public mousemove: any; // generated by ngc-pre-compiler.js\n  public mouseout: any; // generated by ngc-pre-compiler.js\n  public mouseover: any; // generated by ngc-pre-compiler.js\n  public projection_changed: any; // generated by ngc-pre-compiler.js\n  public resize: any; // generated by ngc-pre-compiler.js\n  public rightclick: any; // generated by ngc-pre-compiler.js\n  public tilesloaded: any; // generated by ngc-pre-compiler.js\n  public tile_changed: any; // generated by ngc-pre-compiler.js\n  public zoom_changed: any; // generated by ngc-pre-compiler.js\n  public mapClick: any; // generated by ngc-pre-compiler.js\n  public mapMouseover: any; // generated by ngc-pre-compiler.js\n  public mapMouseout: any; // generated by ngc-pre-compiler.js\n  public mapMousemove: any; // generated by ngc-pre-compiler.js\n  public mapDrag: any; // generated by ngc-pre-compiler.js\n  public mapDragend: any; // generated by ngc-pre-compiler.js\n  public mapDragstart: any; // generated by ngc-pre-compiler.js\n\n  @Output() public mapReady$: EventEmitter<any> = new EventEmitter();\n\n  public el: HTMLElement;\n  public map: google.maps.Map;\n  public mapOptions: google.maps.MapOptions = {};\n\n  public inputChanges$ = new Subject();\n\n  // map objects by group\n  public infoWindows: { [id: string]: InfoWindow } = { };\n\n  // map has been fully initialized\n  public mapIdledOnce: boolean = false;\n\n  private initializeMapAfterDisplayed = false;\n  private apiLoaderSub;\n\n  constructor(\n    public optionBuilder: OptionBuilder,\n    public elementRef: ElementRef,\n    public geolocation: NavigatorGeolocation,\n    public geoCoder: GeoCoder,\n    public nguiMap: NguiMap,\n    public apiLoader: NgMapApiLoader,\n    public zone: NgZone,\n  ) {\n    apiLoader.load();\n\n    // all outputs needs to be initialized,\n    // http://stackoverflow.com/questions/37765519/angular2-directive-cannot-read-property-subscribe-of-undefined-with-outputs\n    OUTPUTS.forEach(output => this[output] = new EventEmitter());\n  }\n\n  ngAfterViewInit() {\n    this.apiLoaderSub = this.apiLoader.api$\n      .pipe(first())\n      .subscribe(() => this.initializeMap());\n  }\n\n  ngAfterViewChecked() {\n      if (this.initializeMapAfterDisplayed && this.el && this.el.offsetWidth > 0) {\n        this.initializeMap();\n      }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.inputChanges$.next(changes);\n  }\n\n  initializeMap(): void {\n    this.el = this.elementRef.nativeElement.querySelector('.google-map');\n    if (this.el && this.el.offsetWidth === 0) {\n        this.initializeMapAfterDisplayed = true;\n        return;\n    }\n\n    this.initializeMapAfterDisplayed = false;\n    this.mapOptions = this.optionBuilder.googlizeAllInputs(INPUTS, this);\n\n\n    this.mapOptions.zoom = this.mapOptions.zoom || 15;\n    typeof this.mapOptions.center === 'string' && (delete this.mapOptions.center);\n\n    this.zone.runOutsideAngular(() => {\n      this.map = new google.maps.Map(this.el, this.mapOptions);\n      this.map['mapObjectName'] = 'NguiMapComponent';\n\n      if (!this.mapOptions.center) { // if center is not given as lat/lng\n        this.setCenter();\n      }\n\n      // set google events listeners and emits to this outputs listeners\n      this.nguiMap.setObjectEvents(OUTPUTS, this, 'map');\n\n      this.map.addListener('idle', () => {\n        if (!this.mapIdledOnce) {\n          this.mapIdledOnce = true;\n          setTimeout(() => { // Why????, subsribe and emit must not be in the same cycle???\n            this.mapReady$.emit(this.map);\n          });\n        }\n      });\n\n      // update map when input changes\n      this.inputChanges$.pipe(\n        debounceTime(1000),\n        tap((changes: SimpleChanges) => this.nguiMap.updateGoogleObject(this.map, changes)),\n      ).subscribe();\n\n      if (typeof window !== 'undefined' && (<any>window)['nguiMapRef']) {\n        // expose map object for test and debugging on (<any>window)\n        (<any>window)['nguiMapRef'].map = this.map;\n      }\n    });\n  }\n\n  setCenter(): void {\n    if (!this['center']) { // center is not from user. Thus, we set the current location\n      this.geolocation.getCurrentPosition().subscribe(\n        position => {\n\n          let latLng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);\n          this.map.setCenter(latLng);\n        },\n        error => {\n          console.error('ngui-map: Error finding the current position');\n          this.map.setCenter(this.mapOptions['geoFallbackCenter'] || new google.maps.LatLng(0, 0));\n        }\n      );\n    }\n    else if (typeof this['center'] === 'string') {\n      this.geoCoder.geocode({address: this['center']}).subscribe(\n        results => {\n\n          this.map.setCenter(results[0].geometry.location);\n        },\n        error => {\n          this.map.setCenter(this.mapOptions['geoFallbackCenter'] || new google.maps.LatLng(0, 0));\n        });\n    }\n  }\n\n  openInfoWindow(id: string, anchor: google.maps.MVCObject) {\n    this.infoWindows[id].open(anchor);\n  }\n\n  closeInfoWindow(id: string) {\n    // if infoWindow for id exists, close the infoWindow\n    if (this.infoWindows[id])\n      this.infoWindows[id].close();\n  }\n\n  ngOnDestroy() {\n    this.inputChanges$.complete();\n    if (this.el && !this.initializeMapAfterDisplayed) {\n      this.nguiMap.clearObjectEvents(OUTPUTS, this, 'map');\n    }\n    if (this.apiLoaderSub) {\n      this.apiLoaderSub.unsubscribe();\n    }\n  }\n\n  // map.markers, map.circles, map.heatmapLayers.. etc\n  addToMapObjectGroup(mapObjectName: string, mapObject: any) {\n    let groupName = toCamelCase(mapObjectName.toLowerCase()) + 's'; // e.g. markers\n    this.map[groupName] = this.map[groupName] || [];\n    this.map[groupName].push(mapObject);\n  }\n\n  removeFromMapObjectGroup(mapObjectName: string, mapObject: any) {\n    let groupName = toCamelCase(mapObjectName.toLowerCase()) + 's'; // e.g. markers\n    if (this.map && this.map[groupName]) {\n      let index = this.map[groupName].indexOf(mapObject);\n\n      (index > -1) && this.map[groupName].splice(index, 1);\n    }\n  }\n}\n","import { Directive } from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst INPUTS = [];\nconst OUTPUTS = [ ];\n\n@Directive({\n  selector: 'ngui-map > bicycling-layer',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n})\nexport class BicyclingLayer extends BaseMapDirective {\n  // declare INPUTS for AOT compiler\n\n\n  // declare OUTPUTS for AOT compiler\n\n\n  constructor(nguiMapComp: NguiMapComponent) {\n    super(nguiMapComp, 'BicyclingLayer', INPUTS, OUTPUTS);\n  }\n}","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  SimpleChanges,\n  ViewChild, ViewContainerRef,\n  Output, OnInit, OnChanges, OnDestroy\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { debounceTime, tap } from 'rxjs/operators';\nimport { NguiMap } from '../services/ngui-map';\nimport { NguiMapComponent } from './ngui-map.component';\n\nconst INPUTS = [\n  'content', 'disableAutoPan', 'maxWidth', 'pixelOffset', 'position', 'zIndex', 'options'\n];\nconst OUTPUTS = [\n  'closeclick', 'content_changed', 'domready', 'position_changed', 'zindex_changed'\n];\n\n@Component({\n  selector: 'ngui-map > info-window',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n  template: `<div #template><ng-content></ng-content></div>`,\n})\nexport class InfoWindow implements OnInit, OnChanges, OnDestroy {\n  // declare INPUTS for AOT compiler\n  public content: any; // generated by ngc-pre-compiler.js\n  public disableAutoPan: any; // generated by ngc-pre-compiler.js\n  public maxWidth: any; // generated by ngc-pre-compiler.js\n  public pixelOffset: any; // generated by ngc-pre-compiler.js\n  public position: any; // generated by ngc-pre-compiler.js\n  public zIndex: any; // generated by ngc-pre-compiler.js\n  public options: any; // generated by ngc-pre-compiler.js\n\n  // declare OUTPUTS for AOT compiler\n  public closeclick: any; // generated by ngc-pre-compiler.js\n  public content_changed: any; // generated by ngc-pre-compiler.js\n  public domready: any; // generated by ngc-pre-compiler.js\n  public position_changed: any; // generated by ngc-pre-compiler.js\n  public zindex_changed: any; // generated by ngc-pre-compiler.js\n\n  @Output() initialized$: EventEmitter<any> = new EventEmitter();\n\n  public infoWindow: google.maps.InfoWindow;\n  public objectOptions: google.maps.InfoWindowOptions = {};\n  public inputChanges$ = new Subject();\n  @ViewChild('template', {read: ViewContainerRef}) template: ViewContainerRef;\n\n  constructor(\n    private elementRef: ElementRef,\n    private nguiMap: NguiMap,\n    private nguiMapComponent: NguiMapComponent,\n  ) {\n    this.elementRef.nativeElement.style.display = 'none';\n    OUTPUTS.forEach(output => this[output] = new EventEmitter());\n  }\n\n  // Initialize this map object when map is ready\n  ngOnInit() {\n    if (this.nguiMapComponent.mapIdledOnce) { // map is ready already\n      this.initialize();\n    } else {\n      this.nguiMapComponent.mapReady$.subscribe(map => this.initialize());\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.inputChanges$.next(changes);\n  }\n\n  // called when map is ready\n  initialize(): void {\n\n\n    this.objectOptions = this.nguiMapComponent.optionBuilder.googlizeAllInputs(INPUTS, this);\n    this.infoWindow = new google.maps.InfoWindow(this.objectOptions);\n    this.infoWindow['mapObjectName'] = 'InfoWindow';\n\n\n    // register infoWindow ids to NguiMap, so that it can be opened by id\n    if (this.elementRef.nativeElement.id) {\n      this.nguiMapComponent.infoWindows[this.elementRef.nativeElement.id] = this;\n    } else {\n      console.error('An InfoWindow must have an id. e.g. id=\"detail\"');\n    }\n\n    // set google events listeners and emits to this outputs listeners\n    this.nguiMap.setObjectEvents(OUTPUTS, this, 'infoWindow');\n\n    // update object when input changes\n    this.inputChanges$.pipe(\n      debounceTime(1000),\n      tap((changes: SimpleChanges) => this.nguiMap.updateGoogleObject(this.infoWindow, changes))\n    ).subscribe();\n\n    this.nguiMapComponent.addToMapObjectGroup('InfoWindow', this.infoWindow);\n    this.initialized$.emit(this.infoWindow);\n  }\n\n  open(anchor: google.maps.MVCObject) {\n    // set content and open it\n    this.infoWindow.setContent(this.template.element.nativeElement);\n    this.infoWindow.open(this.nguiMapComponent.map, anchor);\n  }\n  close() {\n    // check if infoWindow exists, and closes it\n    if (this.infoWindow)\n      this.infoWindow.close();\n  }\n  ngOnDestroy() {\n    this.inputChanges$.complete();\n    if (this.infoWindow) {\n      this.nguiMap.clearObjectEvents(OUTPUTS, this, 'infoWindow');\n      delete this.infoWindow;\n    }\n  }\n}\n","import {\r\n  Component,\r\n  ElementRef,\r\n  Output,\r\n  EventEmitter,\r\n  SimpleChanges, OnInit, OnDestroy, OnChanges,\r\n} from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime, tap } from 'rxjs/operators';\r\n\r\nimport { NguiMap } from '../services/ngui-map';\r\nimport { NguiMapComponent } from './ngui-map.component';\r\n\r\nconst INPUTS = [\r\n  'position'\r\n];\r\n// to avoid DOM event conflicts map_*\r\nconst OUTPUTS = [\r\n  'animationChanged', 'click', 'clickableChanged', 'cursorChanged', 'dblclick', 'drag', 'dragend', 'draggableChanged',\r\n  'dragstart', 'flatChanged', 'iconChanged', 'mousedown', 'mouseout', 'mouseover', 'mouseup', 'positionChanged', 'rightclick',\r\n  'shapeChanged', 'titleChanged', 'visibleChanged', 'zindexChanged',\r\n  'map_click', 'map_mouseover', 'map_mouseout', 'map_mouseup', 'map_mousedown', 'map_drag', 'map_dragend'\r\n];\r\n\r\n/**\r\n * Wrapper to a create extend OverlayView at runtime, only after google maps is loaded.\r\n * Otherwise throws a google is unknown error.\r\n */\r\nfunction getCustomMarkerOverlayView(htmlEl: HTMLElement, position: any) {\r\n\r\n  class CustomMarkerOverlayView extends google.maps.OverlayView {\r\n\r\n    private htmlEl: HTMLElement;\r\n    private position: any;\r\n    private zIndex: string;\r\n    private visible: boolean = true;\r\n\r\n    constructor(htmlEl: HTMLElement, position: any) {\r\n      super();\r\n      this.htmlEl = htmlEl;\r\n      this.position = position;\r\n    }\r\n\r\n    onAdd(): void {\r\n      this.getPanes().overlayMouseTarget.appendChild(this.htmlEl);\r\n\r\n      // required for correct display inside google maps container\r\n      this.htmlEl.style.position = 'absolute';\r\n    }\r\n\r\n    draw(): void {\r\n      this.setPosition(this.position);\r\n      this.setZIndex(this.zIndex);\r\n      this.setVisible(this.visible);\r\n    }\r\n\r\n    onRemove(): void {\r\n      //\r\n    }\r\n\r\n    getPosition() {\r\n      return this.position;\r\n    }\r\n\r\n    setPosition = (position?: any) => {\r\n      this.htmlEl.style.visibility = 'hidden';\r\n\r\n      if (position.constructor.name === 'Array') {\r\n        this.position = new google.maps.LatLng(position[0], position[1]);\r\n      } else if (typeof position === 'string') {\r\n        let geocoder = new google.maps.Geocoder();\r\n\r\n        geocoder.geocode({address: position}, (results, status) => {\r\n          if (status === google.maps.GeocoderStatus.OK) {\r\n\r\n            this.setPosition(results[0].geometry.location);\r\n          } else {\r\n\r\n          }\r\n        });\r\n      } else if (position && typeof position.lng === 'function') {\r\n        this.position = position;\r\n      }\r\n\r\n      if (this.getProjection() && typeof this.position.lng === 'function') {\r\n        let positionOnMap = () => {\r\n          let projection = this.getProjection();\r\n          if (!projection) {\r\n            return;\r\n          }\r\n          let posPixel = projection.fromLatLngToDivPixel(this.position);\r\n          let x = Math.round(posPixel.x - (this.htmlEl.offsetWidth / 2));\r\n          let y = Math.round(posPixel.y - this.htmlEl.offsetHeight / 2);\r\n          this.htmlEl.style.left = x + 'px';\r\n          this.htmlEl.style.top = y + 'px';\r\n          this.htmlEl.style.visibility = 'visible';\r\n        };\r\n\r\n        if (this.htmlEl.offsetWidth && this.htmlEl.offsetHeight) {\r\n          positionOnMap();\r\n        } else {\r\n          setTimeout(() => positionOnMap());\r\n        }\r\n      }\r\n    }\r\n\r\n    setZIndex(zIndex: string): void {\r\n      zIndex && (this.zIndex = zIndex); /* jshint ignore:line */\r\n      this.htmlEl.style.zIndex = this.zIndex;\r\n    }\r\n\r\n    setVisible(visible: boolean) {\r\n      this.htmlEl.style.display = visible ? 'inline-block' : 'none';\r\n      this.visible = visible;\r\n    }\r\n  }\r\n\r\n  return new CustomMarkerOverlayView(htmlEl, position);\r\n}\r\n\r\n@Component({\r\n  selector: 'ngui-map > custom-marker',\r\n  inputs: INPUTS,\r\n  outputs: OUTPUTS,\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\n\r\nexport class CustomMarker implements OnInit, OnDestroy, OnChanges {\n  // declare INPUTS for AOT compiler\n  public position: any; // generated by ngc-pre-compiler.js\n\n  // declare OUTPUTS for AOT compiler\n  public animationChanged: any; // generated by ngc-pre-compiler.js\n  public click: any; // generated by ngc-pre-compiler.js\n  public clickableChanged: any; // generated by ngc-pre-compiler.js\n  public cursorChanged: any; // generated by ngc-pre-compiler.js\n  public dblclick: any; // generated by ngc-pre-compiler.js\n  public drag: any; // generated by ngc-pre-compiler.js\n  public dragend: any; // generated by ngc-pre-compiler.js\n  public draggableChanged: any; // generated by ngc-pre-compiler.js\n  public dragstart: any; // generated by ngc-pre-compiler.js\n  public flatChanged: any; // generated by ngc-pre-compiler.js\n  public iconChanged: any; // generated by ngc-pre-compiler.js\n  public mousedown: any; // generated by ngc-pre-compiler.js\n  public mouseout: any; // generated by ngc-pre-compiler.js\n  public mouseover: any; // generated by ngc-pre-compiler.js\n  public mouseup: any; // generated by ngc-pre-compiler.js\n  public positionChanged: any; // generated by ngc-pre-compiler.js\n  public rightclick: any; // generated by ngc-pre-compiler.js\n  public shapeChanged: any; // generated by ngc-pre-compiler.js\n  public titleChanged: any; // generated by ngc-pre-compiler.js\n  public visibleChanged: any; // generated by ngc-pre-compiler.js\n  public zindexChanged: any; // generated by ngc-pre-compiler.js\n  public map_click: any; // generated by ngc-pre-compiler.js\n  public map_mouseover: any; // generated by ngc-pre-compiler.js\n  public map_mouseout: any; // generated by ngc-pre-compiler.js\n  public map_mouseup: any; // generated by ngc-pre-compiler.js\n  public map_mousedown: any; // generated by ngc-pre-compiler.js\n  public map_drag: any; // generated by ngc-pre-compiler.js\n  public map_dragend: any; // generated by ngc-pre-compiler.js\n\r\n  @Output() initialized$: EventEmitter<any> = new EventEmitter();\r\n\r\n  public inputChanges$ = new Subject();\r\n\r\n  private el: HTMLElement;\r\n  private mapObject: any;\r\n\r\n  constructor(private nguiMapComponent: NguiMapComponent,\r\n              private elementRef: ElementRef,\r\n              private nguiMap: NguiMap) {\r\n    this.elementRef.nativeElement.style.display = 'none';\r\n    OUTPUTS.forEach(output => this[output] = new EventEmitter());\r\n  }\r\n\r\n  // Initialize this map object when map is ready\r\n  ngOnInit() {\r\n    if (this.nguiMapComponent.mapIdledOnce) { // map is ready already\r\n      this.initialize();\r\n    } else {\r\n      this.nguiMapComponent.mapReady$.subscribe(map => this.initialize());\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    this.inputChanges$.next(changes);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.inputChanges$.complete();\r\n    this.nguiMapComponent.removeFromMapObjectGroup('CustomMarker', this.mapObject);\r\n\r\n    if (this.mapObject) {\r\n      this.nguiMap.clearObjectEvents(OUTPUTS, this, 'mapObject');\r\n    }\r\n  }\r\n\r\n  private initialize(): void {\r\n\r\n    this.el = this.elementRef.nativeElement;\r\n\r\n    this.mapObject = getCustomMarkerOverlayView(this.el, this['position']);\r\n    this.mapObject.setMap(this.nguiMapComponent.map);\r\n\r\n    // set google events listeners and emits to this outputs listeners\r\n    this.nguiMap.setObjectEvents(OUTPUTS, this, 'mapObject');\r\n\r\n    // update object when input changes\r\n    this.inputChanges$.pipe(\r\n      debounceTime(1000),\r\n      tap((changes: SimpleChanges) => this.nguiMap.updateGoogleObject(this.mapObject, changes)),\r\n    ).subscribe();\r\n\r\n    this.nguiMapComponent.addToMapObjectGroup('CustomMarker', this.mapObject);\r\n    this.initialized$.emit(this.mapObject);\r\n  }\r\n\r\n}\r\n","import { Directive } from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst INPUTS = [\n  'center', 'clickable', 'draggable', 'editable', 'fillColor', 'fillOpacity', 'map', 'radius',\n  'strokeColor', 'strokeOpacity', 'strokePosition', 'strokeWeight', 'visible', 'zIndex', 'options',\n  // ngui-map specific inputs\n  'geoFallbackCenter'\n];\nconst OUTPUTS = [\n  'centerChanged', 'click', 'dblclick', 'drag', 'dragend', 'dragstart',\n  'mousedown', 'mousemove', 'mouseout', 'mouseover', 'mouseup', 'radiusChanged', 'rightclick',\n];\n\n@Directive({\n  selector: 'ngui-map>circle, ngui-map>map-circle',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n})\nexport class Circle extends BaseMapDirective {\n  // declare INPUTS for AOT compiler\n  public center: any; // generated by ngc-pre-compiler.js\n  public clickable: any; // generated by ngc-pre-compiler.js\n  public draggable: any; // generated by ngc-pre-compiler.js\n  public editable: any; // generated by ngc-pre-compiler.js\n  public fillColor: any; // generated by ngc-pre-compiler.js\n  public fillOpacity: any; // generated by ngc-pre-compiler.js\n  public map: any; // generated by ngc-pre-compiler.js\n  public radius: any; // generated by ngc-pre-compiler.js\n  public strokeColor: any; // generated by ngc-pre-compiler.js\n  public strokeOpacity: any; // generated by ngc-pre-compiler.js\n  public strokePosition: any; // generated by ngc-pre-compiler.js\n  public strokeWeight: any; // generated by ngc-pre-compiler.js\n  public visible: any; // generated by ngc-pre-compiler.js\n  public zIndex: any; // generated by ngc-pre-compiler.js\n  public options: any; // generated by ngc-pre-compiler.js\n  public geoFallbackCenter: any; // generated by ngc-pre-compiler.js\n\n  // declare OUTPUTS for AOT compiler\n  public centerChanged: any; // generated by ngc-pre-compiler.js\n  public click: any; // generated by ngc-pre-compiler.js\n  public dblclick: any; // generated by ngc-pre-compiler.js\n  public drag: any; // generated by ngc-pre-compiler.js\n  public dragend: any; // generated by ngc-pre-compiler.js\n  public dragstart: any; // generated by ngc-pre-compiler.js\n  public mousedown: any; // generated by ngc-pre-compiler.js\n  public mousemove: any; // generated by ngc-pre-compiler.js\n  public mouseout: any; // generated by ngc-pre-compiler.js\n  public mouseover: any; // generated by ngc-pre-compiler.js\n  public mouseup: any; // generated by ngc-pre-compiler.js\n  public radiusChanged: any; // generated by ngc-pre-compiler.js\n  public rightclick: any; // generated by ngc-pre-compiler.js\n\n  public mapObject: google.maps.Circle;\n  public objectOptions: google.maps.CircleOptions = <google.maps.CircleOptions>{};\n\n  constructor(private nguiMapComp: NguiMapComponent) {\n    super(nguiMapComp, 'Circle', INPUTS, OUTPUTS);\n  }\n\n  initialize(): void {\n    super.initialize();\n    this.setCenter();\n  }\n\n  setCenter(): void {\n    if (!this['center']) {\n      this._subscriptions.push(this.nguiMapComp.geolocation.getCurrentPosition().subscribe(\n        center => {\n\n          let latLng = new google.maps.LatLng(center.coords.latitude, center.coords.longitude);\n          this.mapObject.setCenter(latLng);\n        },\n        error => {\n          console.error('ngui-map, error in finding the current position');\n          this.mapObject.setCenter(this.objectOptions['geoFallbackCenter'] || new google.maps.LatLng(0, 0));\n        }\n      ));\n    } else if (typeof this['center'] === 'string') {\n      this._subscriptions.push(this.nguiMapComp.geoCoder.geocode({address: this['center']}).subscribe(\n        results => {\n\n          this.mapObject.setCenter(results[0].geometry.location);\n        },\n        error => {\n          console.error('ngui-map, error in finding location from', this['center']);\n          this.mapObject.setCenter(this.objectOptions['geoFallbackCenter'] || new google.maps.LatLng(0, 0));\n        }\n      ));\n    }\n  }\n}\n","import { Directive } from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst INPUTS = ['controlPosition', 'controls', 'drawingMode', 'featureFactory', 'style', 'geoJson', 'geoJsonUrl'];\nconst OUTPUTS = [\n  'addfeature', 'click', 'dblclick', 'mousedown', 'mouseout', 'mouseover',\n  'mouseup', 'removefeature', 'removeproperty', 'rightclick', 'setgeometry', 'setproperty'\n];\n\n@Directive({\n  selector: 'ngui-map > data-layer',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n})\nexport class DataLayer extends BaseMapDirective {\n  // declare INPUTS for AOT compiler\n  public controlPosition: any; // generated by ngc-pre-compiler.js\n  public controls: any; // generated by ngc-pre-compiler.js\n  public drawingMode: any; // generated by ngc-pre-compiler.js\n  public featureFactory: any; // generated by ngc-pre-compiler.js\n  public style: any; // generated by ngc-pre-compiler.js\n  public geoJson: any; // generated by ngc-pre-compiler.js\n  public geoJsonUrl: any; // generated by ngc-pre-compiler.js\n\n  // declare OUTPUTS for AOT compiler\n  public addfeature: any; // generated by ngc-pre-compiler.js\n  public click: any; // generated by ngc-pre-compiler.js\n  public dblclick: any; // generated by ngc-pre-compiler.js\n  public mousedown: any; // generated by ngc-pre-compiler.js\n  public mouseout: any; // generated by ngc-pre-compiler.js\n  public mouseover: any; // generated by ngc-pre-compiler.js\n  public mouseup: any; // generated by ngc-pre-compiler.js\n  public removefeature: any; // generated by ngc-pre-compiler.js\n  public removeproperty: any; // generated by ngc-pre-compiler.js\n  public rightclick: any; // generated by ngc-pre-compiler.js\n  public setgeometry: any; // generated by ngc-pre-compiler.js\n  public setproperty: any; // generated by ngc-pre-compiler.js\n\n  constructor(nguiMapComponent: NguiMapComponent) {\n    super(nguiMapComponent, 'Data', INPUTS, OUTPUTS);\n  }\n\n  // only called when map is ready\n  initialize(): void {\n    if (this['geoJson']) {\n      // addGeoJson from an object\n\n      this.nguiMapComponent.map.data.addGeoJson(this['geoJson']);\n    } else if (this['geoJsonUrl']) {\n      // loadGeoJson from a URL\n\n      this.nguiMapComponent.map.data.loadGeoJson(this['geoJsonUrl']);\n    }\n    else {\n      this.objectOptions = this.optionBuilder.googlizeAllInputs(this.inputs, this);\n\n      this.nguiMapComponent.map.data.add(this.objectOptions);\n    }\n\n    // unlike others, data belongs to map. e.g., map.data.loadGeoJson(), map.data.add()\n    this.mapObject = this.nguiMapComponent.map.data;\n\n    // set google events listeners and emits to this outputs listeners\n    this.nguiMap.setObjectEvents(this.outputs, this, 'mapObject');\n\n    this.nguiMapComponent.addToMapObjectGroup(this.mapObjectName, this.mapObject);\n    this.initialized$.emit(this.mapObject);\n  }\n}","import { Input, Directive, SimpleChanges, OnChanges, OnDestroy } from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\nimport { NavigatorGeolocation } from '../services/navigator-geolocation';\n\nconst INPUTS = [\n  'directions', 'draggable', 'hideRouteList', 'infoWindow', 'panel', 'markerOptions',\n  'polylineOptions', 'preserveViewport', 'routeIndex', 'suppressBicyclingLayer',\n  'suppressInfoWindows', 'suppressMarkers', 'suppressPolylines'\n];\nconst OUTPUTS = ['directions_changed'];\n\n@Directive({\n  selector: 'ngui-map > directions-renderer',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n})\nexport class DirectionsRenderer extends BaseMapDirective implements OnChanges, OnDestroy {\n  // declare INPUTS for AOT compiler\n  public directions: any; // generated by ngc-pre-compiler.js\n  public draggable: any; // generated by ngc-pre-compiler.js\n  public hideRouteList: any; // generated by ngc-pre-compiler.js\n  public infoWindow: any; // generated by ngc-pre-compiler.js\n  public panel: any; // generated by ngc-pre-compiler.js\n  public markerOptions: any; // generated by ngc-pre-compiler.js\n  public polylineOptions: any; // generated by ngc-pre-compiler.js\n  public preserveViewport: any; // generated by ngc-pre-compiler.js\n  public routeIndex: any; // generated by ngc-pre-compiler.js\n  public suppressBicyclingLayer: any; // generated by ngc-pre-compiler.js\n  public suppressInfoWindows: any; // generated by ngc-pre-compiler.js\n  public suppressMarkers: any; // generated by ngc-pre-compiler.js\n  public suppressPolylines: any; // generated by ngc-pre-compiler.js\n\n  // declare OUTPUTS for AOT compiler\n  public directions_changed: any; // generated by ngc-pre-compiler.js\n\n  // tslint:disable-next-line\n  @Input('directions-request') directionsRequest: google.maps.DirectionsRequest;\n\n  directionsService: google.maps.DirectionsService;\n  directionsRenderer: google.maps.DirectionsRenderer;\n\n  constructor(\n    nguiMapComponent: NguiMapComponent,\n    public geolocation: NavigatorGeolocation\n  ) {\n    super(nguiMapComponent, 'DirectionsRenderer', INPUTS, OUTPUTS);\n  }\n\n  // only called when map is ready\n  initialize(): void {\n    this.objectOptions = this.optionBuilder.googlizeAllInputs(this.inputs, this);\n    if (typeof this.objectOptions['panel'] === 'string') { // find a Node for panel\n      this.objectOptions['panel'] = document.querySelector(this.objectOptions['panel']);\n    }\n\n\n\n    this.directionsService = new google.maps.DirectionsService();\n    this.directionsRenderer = new google.maps.DirectionsRenderer(this.objectOptions);\n\n    this.directionsRenderer.setMap(this.nguiMapComponent.map);\n\n    // set google events listeners and emidirectionsRenderer to this outputs listeners\n    this.showDirections(this.directionsRequest);\n\n    this.nguiMap.setObjectEvents(this.outputs, this, 'directionsRenderer');\n\n    this.nguiMapComponent.addToMapObjectGroup(this.mapObjectName, this.mapObject);\n    this.initialized$.emit(this.directionsRenderer);\n  }\n\n\n  ngOnChanges(changes: SimpleChanges) {\n    let newOptions = {};\n    for (let key in changes) {\n      if (this.inputs.indexOf(key) !== -1) {\n        newOptions[key] = this.optionBuilder.googlize(changes[key].currentValue);\n      }\n    }\n    if (changes['directionsRequest'] && this.directionsRenderer) {\n      this.directionsService && this.showDirections(this.directionsRequest);\n    }\n  }\n\n  showDirections(directionsRequest: google.maps.DirectionsRequest) {\n    this.directionsService.route(directionsRequest,\n      (response: any, status: any) =>  {\n        // in some-case the callback is called during destroy component,\n        // we should make sure directionsRenderer is still defined (cancelling `route` callback is not possible).\n        if (!this.directionsRenderer) {\n          return;\n        }\n\n        if (status === google.maps.DirectionsStatus.OK) {\n          this.directionsRenderer.setDirections(response);\n        } else {\n          console.error('Directions request failed due to ' + status);\n        }\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.nguiMap.clearObjectEvents(this.outputs, this, 'directionsRenderer');\n  }\n}","import { Directive } from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst INPUTS = [\n  'options',\n  'circleOptions', 'drawingControl', 'drawingControlOptions', 'drawingMode',\n  'map', 'markerOptions', 'polygonOptions', 'polylineOptions', 'rectangleOptions'\n];\nconst OUTPUTS = [\n  'circlecomplete', 'markercomplete', 'overlaycomplete',\n  'polygoncomplete', 'polylinecomplete', 'rectanglecomplete'\n];\n\n@Directive({\n  selector: 'ngui-map > drawing-manager',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n})\nexport class DrawingManager extends BaseMapDirective {\n  // declare INPUTS for AOT compiler\n  public options: any; // generated by ngc-pre-compiler.js\n  public circleOptions: any; // generated by ngc-pre-compiler.js\n  public drawingControl: any; // generated by ngc-pre-compiler.js\n  public drawingControlOptions: any; // generated by ngc-pre-compiler.js\n  public drawingMode: any; // generated by ngc-pre-compiler.js\n  public map: any; // generated by ngc-pre-compiler.js\n  public markerOptions: any; // generated by ngc-pre-compiler.js\n  public polygonOptions: any; // generated by ngc-pre-compiler.js\n  public polylineOptions: any; // generated by ngc-pre-compiler.js\n  public rectangleOptions: any; // generated by ngc-pre-compiler.js\n\n  // declare OUTPUTS for AOT compiler\n  public circlecomplete: any; // generated by ngc-pre-compiler.js\n  public markercomplete: any; // generated by ngc-pre-compiler.js\n  public overlaycomplete: any; // generated by ngc-pre-compiler.js\n  public polygoncomplete: any; // generated by ngc-pre-compiler.js\n  public polylinecomplete: any; // generated by ngc-pre-compiler.js\n  public rectanglecomplete: any; // generated by ngc-pre-compiler.js\n\n  constructor(nguiMapComp: NguiMapComponent) {\n    super(nguiMapComp, 'DrawingManager', INPUTS, OUTPUTS);\n    this.libraryName = 'drawing';\n  }\n}\n","import { Directive } from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst INPUTS = [ 'url', 'bounds', 'clickable', 'opacity' ];\nconst OUTPUTS = [ 'click', 'dblclick' ];\n\n@Directive({\n  selector: 'ngui-map > ground-overlay',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n})\nexport class GroundOverlay extends BaseMapDirective {\n  // declare INPUTS for AOT compiler\n  public url: any; // generated by ngc-pre-compiler.js\n  public bounds: any; // generated by ngc-pre-compiler.js\n  public clickable: any; // generated by ngc-pre-compiler.js\n  public opacity: any; // generated by ngc-pre-compiler.js\n\n  // declare OUTPUTS for AOT compiler\n  public click: any; // generated by ngc-pre-compiler.js\n  public dblclick: any; // generated by ngc-pre-compiler.js\n\n  public mapObject: google.maps.GroundOverlay;\n  public objectOptions: google.maps.GroundOverlayOptions = <google.maps.GroundOverlayOptions>{};\n\n  constructor(nguiMapComp: NguiMapComponent) {\n    super(nguiMapComp, 'GroundOverlay', INPUTS, OUTPUTS);\n  }\n\n  // re-declaring initialize function. called when map is ready\n  initialize(): void {\n    // url, bounds are not the options of GroundOverlay\n    this.objectOptions = this.optionBuilder.googlizeAllInputs(['clickable', 'opacity'], this);\n\n\n    // noinspection TypeScriptUnresolvedFunction\n    this.mapObject = new google.maps.GroundOverlay(this['url'], this['bounds'], this.objectOptions);\n    this.mapObject.setMap(this.nguiMapComponent.map);\n    this.mapObject['mapObjectName'] = this.mapObjectName;\n\n    // set google events listeners and emits to this outputs listeners\n    this.nguiMap.setObjectEvents(this.outputs, this, 'mapObject');\n\n    this.nguiMapComponent.addToMapObjectGroup(this.mapObjectName, this.mapObject);\n    this.initialized$.emit(this.mapObject);\n  }\n}\n","import { Directive } from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst INPUTS = [ 'data', 'dissipating', 'gradient', 'maxIntensity', 'opacity', 'radius', 'options' ];\nconst OUTPUTS = [];\n\n@Directive({\n  selector: 'ngui-map > heatmap-layer',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n})\nexport class HeatmapLayer extends BaseMapDirective {\n  // declare INPUTS for AOT compiler\n  public data: any; // generated by ngc-pre-compiler.js\n  public dissipating: any; // generated by ngc-pre-compiler.js\n  public gradient: any; // generated by ngc-pre-compiler.js\n  public maxIntensity: any; // generated by ngc-pre-compiler.js\n  public opacity: any; // generated by ngc-pre-compiler.js\n  public radius: any; // generated by ngc-pre-compiler.js\n  public options: any; // generated by ngc-pre-compiler.js\n\n  // declare OUTPUTS for AOT compiler\n\n\n  public libraryName = 'visualization';\n\n  constructor(nguiMapComp: NguiMapComponent) {\n    super(nguiMapComp, 'HeatmapLayer', INPUTS, OUTPUTS);\n  }\n}\n","import { Directive } from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst INPUTS = [ 'clickable', 'preserveViewport', 'screenOverlays', 'suppressInfoWindows', 'url', 'zIndex', 'options' ];\nconst OUTPUTS = [ 'click', 'defaultviewport_changed', 'status_changed' ];\n\n@Directive({\n  selector: 'ngui-map > kml-layer',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n})\nexport class KmlLayer extends BaseMapDirective {\n  // declare INPUTS for AOT compiler\n  public clickable: any; // generated by ngc-pre-compiler.js\n  public preserveViewport: any; // generated by ngc-pre-compiler.js\n  public screenOverlays: any; // generated by ngc-pre-compiler.js\n  public suppressInfoWindows: any; // generated by ngc-pre-compiler.js\n  public url: any; // generated by ngc-pre-compiler.js\n  public zIndex: any; // generated by ngc-pre-compiler.js\n  public options: any; // generated by ngc-pre-compiler.js\n\n  // declare OUTPUTS for AOT compiler\n  public click: any; // generated by ngc-pre-compiler.js\n  public defaultviewport_changed: any; // generated by ngc-pre-compiler.js\n  public status_changed: any; // generated by ngc-pre-compiler.js\n\n  constructor(nguiMapComp: NguiMapComponent) {\n    super(nguiMapComp, 'KmlLayer', INPUTS, OUTPUTS);\n  }\n}\n","import {Directive, OnInit} from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst INPUTS = [\n  'anchorPoint', 'animation', 'clickable', 'cursor', 'draggable', 'icon', 'label', 'opacity',\n  'optimized', 'place', 'position', 'shape', 'title', 'visible', 'zIndex', 'options',\n  // ngui-map specific inputs\n  'geoFallbackPosition'\n];\nconst OUTPUTS = [\n  'animationChanged', 'click', 'clickableChanged', 'cursorChanged', 'dblclick', 'drag', 'dragend', 'draggableChanged',\n  'dragstart', 'flatChanged', 'iconChanged', 'mousedown', 'mouseout', 'mouseover', 'mouseup', 'positionChanged', 'rightclick',\n  'shapeChanged', 'titleChanged', 'visibleChanged', 'zindexChanged'\n];\n\n@Directive({\n  selector: 'ngui-map > marker',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n})\nexport class Marker extends BaseMapDirective implements OnInit {\n  // declare INPUTS for AOT compiler\n  public anchorPoint: any; // generated by ngc-pre-compiler.js\n  public animation: any; // generated by ngc-pre-compiler.js\n  public clickable: any; // generated by ngc-pre-compiler.js\n  public cursor: any; // generated by ngc-pre-compiler.js\n  public draggable: any; // generated by ngc-pre-compiler.js\n  public icon: any; // generated by ngc-pre-compiler.js\n  public label: any; // generated by ngc-pre-compiler.js\n  public opacity: any; // generated by ngc-pre-compiler.js\n  public optimized: any; // generated by ngc-pre-compiler.js\n  public place: any; // generated by ngc-pre-compiler.js\n  public position: any; // generated by ngc-pre-compiler.js\n  public shape: any; // generated by ngc-pre-compiler.js\n  public title: any; // generated by ngc-pre-compiler.js\n  public visible: any; // generated by ngc-pre-compiler.js\n  public zIndex: any; // generated by ngc-pre-compiler.js\n  public options: any; // generated by ngc-pre-compiler.js\n  public geoFallbackPosition: any; // generated by ngc-pre-compiler.js\n\n  // declare OUTPUTS for AOT compiler\n  public animationChanged: any; // generated by ngc-pre-compiler.js\n  public click: any; // generated by ngc-pre-compiler.js\n  public clickableChanged: any; // generated by ngc-pre-compiler.js\n  public cursorChanged: any; // generated by ngc-pre-compiler.js\n  public dblclick: any; // generated by ngc-pre-compiler.js\n  public drag: any; // generated by ngc-pre-compiler.js\n  public dragend: any; // generated by ngc-pre-compiler.js\n  public draggableChanged: any; // generated by ngc-pre-compiler.js\n  public dragstart: any; // generated by ngc-pre-compiler.js\n  public flatChanged: any; // generated by ngc-pre-compiler.js\n  public iconChanged: any; // generated by ngc-pre-compiler.js\n  public mousedown: any; // generated by ngc-pre-compiler.js\n  public mouseout: any; // generated by ngc-pre-compiler.js\n  public mouseover: any; // generated by ngc-pre-compiler.js\n  public mouseup: any; // generated by ngc-pre-compiler.js\n  public positionChanged: any; // generated by ngc-pre-compiler.js\n  public rightclick: any; // generated by ngc-pre-compiler.js\n  public shapeChanged: any; // generated by ngc-pre-compiler.js\n  public titleChanged: any; // generated by ngc-pre-compiler.js\n  public visibleChanged: any; // generated by ngc-pre-compiler.js\n  public zindexChanged: any; // generated by ngc-pre-compiler.js\n\n  public mapObject: google.maps.Marker;\n  public objectOptions: google.maps.MarkerOptions = <google.maps.MarkerOptions>{};\n\n  constructor(private nguiMapComp: NguiMapComponent) {\n    super(nguiMapComp, 'Marker', INPUTS, OUTPUTS);\n\n  }\n\n  // Initialize this map object when map is ready\n  ngOnInit() {\n    if (this.nguiMapComponent.mapIdledOnce) { // map is ready already\n      this.initialize();\n    } else {\n      this.nguiMapComponent.mapReady$.subscribe(map => this.initialize());\n    }\n  }\n\n  initialize(): void {\n    super.initialize();\n    this.setPosition();\n  }\n\n  setPosition(): void {\n    if (!this['position']) {\n      this._subscriptions.push(this.nguiMapComp.geolocation.getCurrentPosition().subscribe(\n        position => {\n\n          let latLng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);\n          this.mapObject.setPosition(latLng);\n        },\n        error => {\n          console.error('ngui-map, error finding the current location');\n          this.mapObject.setPosition(this.objectOptions['geoFallbackPosition'] || new google.maps.LatLng(0, 0));\n        }\n      ));\n    } else if (typeof this['position'] === 'string') {\n      this._subscriptions.push(this.nguiMapComp.geoCoder.geocode({address: this['position']}).subscribe(\n        results => {\n\n          this.mapObject.setPosition(results[0].geometry.location);\n        },\n        error => {\n          console.error('ngui-map, error finding the location from', this['position']);\n          this.mapObject.setPosition(this.objectOptions['geoFallbackPosition'] || new google.maps.LatLng(0, 0));\n        }\n      ));\n    }\n  }\n}\n","import {\n  Input,\n  Output,\n  Directive,\n  EventEmitter,\n  ElementRef,\n} from '@angular/core';\n\nimport { NgMapApiLoader } from '../services/api-loader';\nimport { OptionBuilder } from '../services/option-builder';\nimport { missingLibraryError } from '../services/util';\nimport { first } from 'rxjs/operators';\n\n@Directive({\n  selector: '[places-auto-complete]'\n})\nexport class PlacesAutoComplete {\n  @Input() bounds: any;\n  @Input() componentRestrictions: any;\n  @Input() types: string[];\n\n  @Output('place_changed') place_changed: EventEmitter<any> = new EventEmitter();\n  @Output() initialized$: EventEmitter<any> = new EventEmitter();\n\n  public objectOptions: any;\n  public autocomplete: google.maps.places.Autocomplete;\n\n  constructor(\n    public optionBuilder: OptionBuilder,\n    public elementRef: ElementRef,\n    public apiLoader: NgMapApiLoader,\n  ) {\n    apiLoader.load();\n    apiLoader.api$\n      .pipe(first())\n      .subscribe(() => this.initialize());\n  }\n\n  // only called when map is ready\n  initialize = (): void => {\n    this.objectOptions =\n      this.optionBuilder.googlizeAllInputs(['bounds', 'componentRestrictions', 'types'], this);\n\n\n    if (!google.maps.places) {\n      throw missingLibraryError('PlacesAutoComplete', 'places');\n    }\n\n    this.autocomplete = new google.maps.places.Autocomplete(\n      this.elementRef.nativeElement,\n      this.objectOptions\n    );\n\n\n    this.autocomplete.addListener('place_changed', place => {\n      this.place_changed.emit(this.autocomplete.getPlace());\n    });\n\n    this.initialized$.emit(this.autocomplete);\n  }\n}\n","import { Directive } from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst INPUTS = [\n  'clickable', 'draggable', 'editable', 'fillColor', 'fillOpacity', 'geodesic', 'paths',\n  'strokeColor', 'strokeOpacity', 'strokePosition', 'strokeWeight', 'visible', 'zIndex', 'options',\n];\nconst OUTPUTS = [\n  'click', 'dblclick', 'drag', 'dragend', 'dragstart', 'mousedown',\n  'mousemove', 'mouseout', 'mouseover', 'mouseup', 'rightclick',\n];\n\n@Directive({\n  selector: 'ngui-map>polygon, ngui-map>map-polygon',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n})\nexport class Polygon extends BaseMapDirective {\n  // declare INPUTS for AOT compiler\n  public clickable: any; // generated by ngc-pre-compiler.js\n  public draggable: any; // generated by ngc-pre-compiler.js\n  public editable: any; // generated by ngc-pre-compiler.js\n  public fillColor: any; // generated by ngc-pre-compiler.js\n  public fillOpacity: any; // generated by ngc-pre-compiler.js\n  public geodesic: any; // generated by ngc-pre-compiler.js\n  public paths: any; // generated by ngc-pre-compiler.js\n  public strokeColor: any; // generated by ngc-pre-compiler.js\n  public strokeOpacity: any; // generated by ngc-pre-compiler.js\n  public strokePosition: any; // generated by ngc-pre-compiler.js\n  public strokeWeight: any; // generated by ngc-pre-compiler.js\n  public visible: any; // generated by ngc-pre-compiler.js\n  public zIndex: any; // generated by ngc-pre-compiler.js\n  public options: any; // generated by ngc-pre-compiler.js\n\n  // declare OUTPUTS for AOT compiler\n  public click: any; // generated by ngc-pre-compiler.js\n  public dblclick: any; // generated by ngc-pre-compiler.js\n  public drag: any; // generated by ngc-pre-compiler.js\n  public dragend: any; // generated by ngc-pre-compiler.js\n  public dragstart: any; // generated by ngc-pre-compiler.js\n  public mousedown: any; // generated by ngc-pre-compiler.js\n  public mousemove: any; // generated by ngc-pre-compiler.js\n  public mouseout: any; // generated by ngc-pre-compiler.js\n  public mouseover: any; // generated by ngc-pre-compiler.js\n  public mouseup: any; // generated by ngc-pre-compiler.js\n  public rightclick: any; // generated by ngc-pre-compiler.js\n\n  constructor(nguiMapComp: NguiMapComponent) {\n    super(nguiMapComp, 'Polygon', INPUTS, OUTPUTS);\n  }\n}\n","import { Directive } from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst INPUTS = [\n  'clickable', 'draggable', 'editable', 'geodesic', 'icons', 'path', 'strokeColor',\n  'strokeOpacity', 'strokeWeight', 'visible', 'zIndex', 'options'\n];\nconst OUTPUTS = [\n  'click', 'dblclick', 'drag', 'dragend', 'dragstart', 'mousedown',\n  'mousemove', 'mouseout', 'mouseover', 'mouseup', 'rightclick'\n];\n\n@Directive({\n  selector: 'ngui-map > polyline',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n})\nexport class Polyline extends BaseMapDirective {\n  // declare INPUTS for AOT compiler\n  public clickable: any; // generated by ngc-pre-compiler.js\n  public draggable: any; // generated by ngc-pre-compiler.js\n  public editable: any; // generated by ngc-pre-compiler.js\n  public geodesic: any; // generated by ngc-pre-compiler.js\n  public icons: any; // generated by ngc-pre-compiler.js\n  public path: any; // generated by ngc-pre-compiler.js\n  public strokeColor: any; // generated by ngc-pre-compiler.js\n  public strokeOpacity: any; // generated by ngc-pre-compiler.js\n  public strokeWeight: any; // generated by ngc-pre-compiler.js\n  public visible: any; // generated by ngc-pre-compiler.js\n  public zIndex: any; // generated by ngc-pre-compiler.js\n  public options: any; // generated by ngc-pre-compiler.js\n\n  // declare OUTPUTS for AOT compiler\n  public click: any; // generated by ngc-pre-compiler.js\n  public dblclick: any; // generated by ngc-pre-compiler.js\n  public drag: any; // generated by ngc-pre-compiler.js\n  public dragend: any; // generated by ngc-pre-compiler.js\n  public dragstart: any; // generated by ngc-pre-compiler.js\n  public mousedown: any; // generated by ngc-pre-compiler.js\n  public mousemove: any; // generated by ngc-pre-compiler.js\n  public mouseout: any; // generated by ngc-pre-compiler.js\n  public mouseover: any; // generated by ngc-pre-compiler.js\n  public mouseup: any; // generated by ngc-pre-compiler.js\n  public rightclick: any; // generated by ngc-pre-compiler.js\n\n  constructor(nguiMapComp: NguiMapComponent) {\n    super(nguiMapComp, 'Polyline', INPUTS, OUTPUTS);\n  }\n}\n","import {Directive, OnDestroy} from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst INPUTS = [\n  'selector', 'options',\n  'addressControl', 'addressControlOptions', 'clickToGo', 'disableDefaultUI', 'disableDoubleClickZoom',\n  'enableCloseButton', 'fullscreenControl', 'fullscreenControlOptions', 'imageDateControl', 'linksControl',\n  'motionTracking', 'motionTrackingControl', 'panControl', 'panControlOptions', 'pano',\n  'position', 'pov', 'scrollwheel', 'showRoadLabels', 'visible', 'zoomControl', 'zoomControlOptions'\n];\nconst OUTPUTS = [\n  'closeclick', 'pano_changed', 'position_changed', 'pov_changed', 'resize', 'status_changed',\n  'visible_changed', 'zoom_changed'\n];\n\n@Directive({\n  selector: 'ngui-map > street-view-panorama',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n})\nexport class StreetViewPanorama extends BaseMapDirective implements OnDestroy {\n  // declare INPUTS for AOT compiler\n  public selector: any; // generated by ngc-pre-compiler.js\n  public options: any; // generated by ngc-pre-compiler.js\n  public addressControl: any; // generated by ngc-pre-compiler.js\n  public addressControlOptions: any; // generated by ngc-pre-compiler.js\n  public clickToGo: any; // generated by ngc-pre-compiler.js\n  public disableDefaultUI: any; // generated by ngc-pre-compiler.js\n  public disableDoubleClickZoom: any; // generated by ngc-pre-compiler.js\n  public enableCloseButton: any; // generated by ngc-pre-compiler.js\n  public fullscreenControl: any; // generated by ngc-pre-compiler.js\n  public fullscreenControlOptions: any; // generated by ngc-pre-compiler.js\n  public imageDateControl: any; // generated by ngc-pre-compiler.js\n  public linksControl: any; // generated by ngc-pre-compiler.js\n  public motionTracking: any; // generated by ngc-pre-compiler.js\n  public motionTrackingControl: any; // generated by ngc-pre-compiler.js\n  public panControl: any; // generated by ngc-pre-compiler.js\n  public panControlOptions: any; // generated by ngc-pre-compiler.js\n  public pano: any; // generated by ngc-pre-compiler.js\n  public position: any; // generated by ngc-pre-compiler.js\n  public pov: any; // generated by ngc-pre-compiler.js\n  public scrollwheel: any; // generated by ngc-pre-compiler.js\n  public showRoadLabels: any; // generated by ngc-pre-compiler.js\n  public visible: any; // generated by ngc-pre-compiler.js\n  public zoomControl: any; // generated by ngc-pre-compiler.js\n  public zoomControlOptions: any; // generated by ngc-pre-compiler.js\n\n  // declare OUTPUTS for AOT compiler\n  public closeclick: any; // generated by ngc-pre-compiler.js\n  public pano_changed: any; // generated by ngc-pre-compiler.js\n  public position_changed: any; // generated by ngc-pre-compiler.js\n  public pov_changed: any; // generated by ngc-pre-compiler.js\n  public resize: any; // generated by ngc-pre-compiler.js\n  public status_changed: any; // generated by ngc-pre-compiler.js\n  public visible_changed: any; // generated by ngc-pre-compiler.js\n  public zoom_changed: any; // generated by ngc-pre-compiler.js\n\n  constructor(nguiMapComp: NguiMapComponent) {\n    super(nguiMapComp, 'StreetViewPanorama', INPUTS, OUTPUTS);\n  }\n\n  // only called when map is ready\n  initialize(): void {\n    this.objectOptions = this.optionBuilder.googlizeAllInputs(this.inputs, this);\n\n\n    let element: HTMLElement;\n    if (this.objectOptions.selector) {\n      // noinspection TypeScriptValidateTypes\n      element = document.querySelector(this['selector']);\n      delete this.objectOptions.selector;\n    } else {\n      element = this.nguiMapComponent.el;\n    }\n\n    // will be set after geocoded\n    typeof this.objectOptions.position === 'string' && (delete this.objectOptions.position);\n\n    this.mapObject = new google.maps[this.mapObjectName](element, this.objectOptions);\n    this.mapObject['mapObjectName'] = this.mapObjectName;\n    this.mapObject['nguiMapComponent'] = this.nguiMapComponent;\n\n    // set google events listeners and emits to this outputs listeners\n    this.nguiMap.setObjectEvents(this.outputs, this, 'mapObject');\n\n    this.nguiMapComponent.addToMapObjectGroup(this.mapObjectName, this.mapObject);\n    this.initialized$.emit(this.mapObject);\n  }\n\n  // When destroyed, remove event listener, and delete this object to prevent memory leak\n  ngOnDestroy() {\n    if (this.nguiMapComponent.el) {\n      this.nguiMap.clearObjectEvents(this.outputs, this, 'mapObject');\n    }\n  }\n}","import { Directive } from '@angular/core';\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst INPUTS = ['autoRefresh', 'options' ];\nconst OUTPUTS = [ ];\n\n@Directive({\n  selector: 'ngui-map > traffic-layer',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n})\nexport class TrafficLayer extends BaseMapDirective {\n  // declare INPUTS for AOT compiler\n  public autoRefresh: any; // generated by ngc-pre-compiler.js\n  public options: any; // generated by ngc-pre-compiler.js\n\n  // declare OUTPUTS for AOT compiler\n\n\n  constructor(nguiMapComp: NguiMapComponent) {\n    super(nguiMapComp, 'TrafficLayer', INPUTS, OUTPUTS);\n  }\n}","import { Directive } from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst INPUTS = [];\nconst OUTPUTS = [ ];\n\n@Directive({\n  selector: 'ngui-map > transit-layer',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n})\nexport class TransitLayer extends BaseMapDirective {\n  // declare INPUTS for AOT compiler\n\n\n  // declare OUTPUTS for AOT compiler\n\n\n  constructor(nguiMapComp: NguiMapComponent) {\n    super(nguiMapComp, 'TransitLayer', INPUTS, OUTPUTS);\n  }\n}","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { OptionBuilder } from './services/option-builder';\nimport { GeoCoder } from './services/geo-coder';\nimport { NavigatorGeolocation } from './services/navigator-geolocation';\nimport { NG_MAP_CONFIG_TOKEN, ConfigOption } from './services/config';\nimport { NgMapApiLoader, NgMapAsyncCallbackApiLoader } from './services/api-loader';\n\nimport { NguiMapComponent } from './components/ngui-map.component';\nimport { InfoWindow } from './components/info-window';\nimport { CustomMarker } from './components/custom-marker';\n\nimport { BicyclingLayer } from './directives/bicycling-layer';\nimport { Circle } from './directives/circle';\nimport { DataLayer } from './directives/data-layer';\nimport { DirectionsRenderer } from './directives/directions-renderer';\nimport { DrawingManager } from './directives/drawing-manager';\nimport { GroundOverlay } from './directives/ground-overlay';\nimport { HeatmapLayer } from './directives/heatmap-layer';\nimport { KmlLayer } from './directives/kml-layer';\nimport { Marker } from './directives/marker';\nimport { NguiMap } from './services/ngui-map';\nimport { PlacesAutoComplete } from './directives/places-auto-complete';\nimport { Polygon } from './directives/polygon';\nimport { Polyline } from './directives/polyline';\nimport { StreetViewPanorama } from './directives/street-view-panorama';\nimport { TrafficLayer } from './directives/traffic-layer';\nimport { TransitLayer } from './directives/transit-layer';\n\nconst COMPONENTS_DIRECTIVES = [\n  NguiMapComponent, InfoWindow,\n  Marker, Circle, CustomMarker, Polygon, InfoWindow, Polyline, GroundOverlay,\n  TransitLayer, TrafficLayer, HeatmapLayer, BicyclingLayer, KmlLayer, DataLayer,\n  StreetViewPanorama, PlacesAutoComplete, DirectionsRenderer,\n  DrawingManager,\n];\n\n@NgModule({\n  imports: [ CommonModule ],\n  declarations: COMPONENTS_DIRECTIVES,\n  exports: [COMPONENTS_DIRECTIVES],\n  providers: [\n    GeoCoder,\n    NavigatorGeolocation,\n    NguiMap,\n    OptionBuilder,\n    {provide: NgMapApiLoader, useClass: NgMapAsyncCallbackApiLoader},\n  ]\n})\nexport class NguiMapModule {\n  static forRoot(config: ConfigOption = {}): ModuleWithProviders {\n    return {\n      ngModule: NguiMapModule,\n      providers: [\n        { provide: NG_MAP_CONFIG_TOKEN, useValue: config }\n      ],\n    };\n  }\n}\n"]}