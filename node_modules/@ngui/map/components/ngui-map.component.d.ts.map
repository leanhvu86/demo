{"version":3,"file":"ngui-map.component.d.ts","sources":["ngui-map.component.d.ts"],"names":[],"mappingssourcesContent":["/// <reference types=\"googlemaps\" />\nimport { ElementRef, EventEmitter, SimpleChanges, NgZone, AfterViewInit, AfterViewChecked, OnChanges, OnDestroy } from '@angular/core';\nimport { OptionBuilder } from '../services/option-builder';\nimport { NavigatorGeolocation } from '../services/navigator-geolocation';\nimport { GeoCoder } from '../services/geo-coder';\nimport { NguiMap } from '../services/ngui-map';\nimport { NgMapApiLoader } from '../services/api-loader';\nimport { InfoWindow } from './info-window';\nimport { Subject } from 'rxjs';\nexport declare class NguiMapComponent implements OnChanges, OnDestroy, AfterViewInit, AfterViewChecked {\n    optionBuilder: OptionBuilder;\n    elementRef: ElementRef;\n    geolocation: NavigatorGeolocation;\n    geoCoder: GeoCoder;\n    nguiMap: NguiMap;\n    apiLoader: NgMapApiLoader;\n    zone: NgZone;\n    backgroundColor: any;\n    center: any;\n    disableDefaultUI: any;\n    disableDoubleClickZoom: any;\n    draggable: any;\n    draggableCursor: any;\n    draggingCursor: any;\n    heading: any;\n    keyboardShortcuts: any;\n    mapMaker: any;\n    mapTypeControl: any;\n    mapTypeId: any;\n    maxZoom: any;\n    minZoom: any;\n    noClear: any;\n    overviewMapControl: any;\n    panControl: any;\n    panControlOptions: any;\n    rotateControl: any;\n    scaleControl: any;\n    scrollwheel: any;\n    streetView: any;\n    styles: any;\n    tilt: any;\n    zoom: any;\n    streetViewControl: any;\n    zoomControl: any;\n    zoomControlOptions: any;\n    mapTypeControlOptions: any;\n    overviewMapControlOptions: any;\n    rotateControlOptions: any;\n    scaleControlOptions: any;\n    streetViewControlOptions: any;\n    fullscreenControl: any;\n    fullscreenControlOptions: any;\n    options: any;\n    geoFallbackCenter: any;\n    bounds_changed: any;\n    center_changed: any;\n    click: any;\n    dblclick: any;\n    drag: any;\n    dragend: any;\n    dragstart: any;\n    heading_changed: any;\n    idle: any;\n    maptypeid_changed: any;\n    mousemove: any;\n    mouseout: any;\n    mouseover: any;\n    projection_changed: any;\n    resize: any;\n    rightclick: any;\n    tilesloaded: any;\n    tile_changed: any;\n    zoom_changed: any;\n    mapClick: any;\n    mapMouseover: any;\n    mapMouseout: any;\n    mapMousemove: any;\n    mapDrag: any;\n    mapDragend: any;\n    mapDragstart: any;\n    mapReady$: EventEmitter<any>;\n    el: HTMLElement;\n    map: google.maps.Map;\n    mapOptions: google.maps.MapOptions;\n    inputChanges$: Subject<{}>;\n    infoWindows: {\n        [id: string]: InfoWindow;\n    };\n    mapIdledOnce: boolean;\n    private initializeMapAfterDisplayed;\n    private apiLoaderSub;\n    constructor(optionBuilder: OptionBuilder, elementRef: ElementRef, geolocation: NavigatorGeolocation, geoCoder: GeoCoder, nguiMap: NguiMap, apiLoader: NgMapApiLoader, zone: NgZone);\n    ngAfterViewInit(): void;\n    ngAfterViewChecked(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    initializeMap(): void;\n    setCenter(): void;\n    openInfoWindow(id: string, anchor: google.maps.MVCObject): void;\n    closeInfoWindow(id: string): void;\n    ngOnDestroy(): void;\n    addToMapObjectGroup(mapObjectName: string, mapObject: any): void;\n    removeFromMapObjectGroup(mapObjectName: string, mapObject: any): void;\n}\n"]}